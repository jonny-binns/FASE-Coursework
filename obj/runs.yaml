'2021-05-01T11:43:44.568000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: analysis of data and information flow ...

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T11:43:44.568000'
'2021-05-01T11:44:11.918000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T11:44:11.918000'
'2021-05-01T11:55:15.243000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T11:55:15.243000'
'2021-05-01T11:59:02.232000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T11:59:02.232000'
'2021-05-01T12:02:20.821000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: analysis of data and information flow ...

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:02:20.821000'
'2021-05-01T12:02:44.187000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:02:44.187000'
'2021-05-01T12:06:11.410000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: analysis of data and information flow ...

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:06:11.410000'
'2021-05-01T12:06:35.317000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:06:35.317000'
'2021-05-01T12:16:44.574000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: analysis of data and information flow ...

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:16:44.574000'
'2021-05-01T12:17:05.642000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:17:05.642000'
'2021-05-01T12:21:55.426000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: analysis of data and information flow ...

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:21:55.426000'
'2021-05-01T12:22:18.894000':
  category: GNATprove
  files:
  - C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove
  label: Basic Prove File
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    aeroplane.adb:272:37: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#0]

    aeroplane.adb:290:91: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#1]

    aeroplane.adb:302:82: low: range check might fail [possible explanation: subprogram
    at aeroplane.ads:187 should mention p in a precondition][#2]

    aeroplane.ads:196:10: medium: postcondition might fail, cannot prove p.Engine.Status''Old
    = p.Engine.Status (e.g. when p = (CockpitDoor => (Status => open, Lock => unlocked,
    Light => off), ExternalDoor => (Status => open, Lock => unlocked, Light => off),
    Flight => stationary, Fuel => (Level => 0, Light => off), MinimumFuel => 0, Altitude
    => (Altitude => 0, Light => off), AirSpeed => (Speed => 0, Light => off), LandingGear
    => (Position => down, Light => off), Engine => (Status => -1, Light => off)) and
    p''Old = (CockpitDoor => (Status => open, Lock => unlocked, Light => off), ExternalDoor
    => (Status => open, Lock => unlocked, Light => off), Flight => stationary, Fuel
    => (Level => 0, Light => off), MinimumFuel => 0, Altitude => (Altitude => 0, Light
    => off), AirSpeed => (Speed => 0, Light => off), LandingGear => (Position => down,
    Light => off), Engine => (Status => -1, Light => off)))[#3]

    Summary logged in C:\Users\Jonny\Documents\GitHub\FASE-Coursework\obj\gnatprove\gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-05-01T12:22:18.894000'
